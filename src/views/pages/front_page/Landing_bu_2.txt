import { onMount, createSignal, onCleanup, from } from "solid-js";

// import Header from "../../components/front/Header";
import Footer from "../../components/front/Footer";
// import ThemeSwitcher from "../../components/front/ThemeSwitcher";
import Header from "../../components/application/Navigation/Header";
import InstitutionTypeChart from "../../components/application/Chart/institution/InstitutionTypeChart";
import InstitutionVarietyChart from "../../components/application/Chart/institution/InstitutionVarietyChart";
import L from "leaflet";
import "leaflet/dist/leaflet.css";

export default function Landing() {
    L.Icon.Default.imagePath = "https://unpkg.com/leaflet@1.9.4/dist/images/";
    let mapContainer: HTMLDivElement | undefined;
    const [mapInstance, setMapInstance] = createSignal<L.Map | null>(null);
    const [windowHeight, setWindowHeight] = createSignal(0);
    const [mapHeight, setMapHeight] = createSignal("500px");

    // Function to calculate map height based on window size
    const calculateMapHeight = () => {
        const height = window.innerHeight;
        setWindowHeight(height);

        // Calculate available height: window height - header height - footer height - padding
        // Assuming header ~60px, footer ~60px, padding ~32px (py-8 = 2rem = 32px)
        const availableHeight = height - 60 - 60 - 32;

        // Use at least 400px, but prefer calculated available height
        const mapHeightValue = Math.max(500, availableHeight);
        setMapHeight(`${mapHeightValue}px`);
    };

    // Handle window resize
    const handleResize = () => {
        calculateMapHeight();
        // Also invalidate map size when window resizes
        if (mapInstance()) {
            setTimeout(() => {
                mapInstance()!.invalidateSize();
            }, 100);
        }
    };

    onMount(() => {
        // Calculate initial map height
        calculateMapHeight();

        // Add resize event listener
        window.addEventListener("resize", handleResize);

        if (mapContainer) {
            console.log("Map container found:", mapContainer);

            // Membuat peta dengan Leaflet
            const map = L.map(mapContainer).setView([-6.1751, 106.865], 13); // Koordinat Jakarta

            // Menambahkan tile layer (peta dasar)
            L.tileLayer("https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png", {
                attribution:
                    '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors',
            }).addTo(map);

            // Menambahkan marker contoh
            L.marker([-6.1751, 106.865])
                .addTo(map)
                .bindPopup("<b>UMKM A</b><br>Deskripsi: UMKM A<br>Jenis: UMKM A<br>Kategori: Kategori A");

            // Pastikan map resize dengan benar
            setTimeout(() => {
                map.invalidateSize();
            }, 100);

            // Simpan instance map untuk cleanup
            setMapInstance(map);
        } else {
            console.log("Map container not found");
        }
    });

    // Bersihkan map saat komponen dibersihkan
    onCleanup(() => {
        // Remove resize event listener
        window.removeEventListener("resize", handleResize);

        if (mapInstance()) {
            mapInstance()!.remove();
            setMapInstance(null);
        }
    });

    return (
        <div class="flex flex-col min-h-[99.9vh]">
            <Header />
            <div id="page-content" class="flex-1 grid grid-cols-1 md:grid-cols-2 gap-4 p-4">
                <div class="bg-neutral-100 dark:bg-neutral-900 min-h-96 md:min-h-0 z-10">
                    <div id="map" ref={mapContainer} class="w-full h-full" />
                </div>
                <div class="grid grid-rows-2 gap-4">
                    <div class="bg-neutral-100 dark:bg-neutral-900">
                        <InstitutionTypeChart />
                    </div>
                    <div class="bg-neutral-100 dark:bg-neutral-900">
                        <InstitutionVarietyChart />
                    </div>
                </div>
            </div>
            <Footer />
        </div>
    );
}
